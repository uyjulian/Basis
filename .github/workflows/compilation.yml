name: Automatic build

on: [push, pull_request]

jobs:
  check-secret:
    runs-on: ubuntu-latest
    outputs:
      secret-is-set: ${{ steps.secret-is-set.outputs.defined }}
    steps:
      - id: secret-is-set
        env:
          TMP_SECRET1: ${{ secrets.UNITY_LICENSE }}
          TMP_SECRET2: ${{ secrets.UNITY_EMAIL }}
          TMP_SECRET3: ${{ secrets.UNITY_PASSWORD }}
        if: "${{ env.TMP_SECRET1 != '' && env.TMP_SECRET2 != '' && env.TMP_SECRET3 != '' }}"
        run: echo "defined=true" >> $GITHUB_OUTPUT

  build-client-win32:
    name: Build client on Windows
    timeout-minutes: 100
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - Basis
    needs: [check-secret]
    if: needs.check-secret.outputs.secret-is-set == 'true'
    steps:
      - name: "Checkout repository"
        timeout-minutes: 2
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Cache Library folder"
        timeout-minutes: 10
        uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-StandaloneWindows64-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-StandaloneWindows64-
            Library-${{ matrix.projectPath }}-
            Library-
      - name: "Build Unity project"
        timeout-minutes: 100
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: 6000.0.31f1
          targetPlatform: StandaloneWindows64
      - name: "Upload client artifact"
        timeout-minutes: 2
        uses: actions/upload-artifact@v4
        with:
          name: Basis-Client
          path: |
            build
            "!**/StandaloneWindows64_BackUpThisFolder_ButDontShipItWithYourGame"
      - name: "Upload client symbols artifact"
        timeout-minutes: 4
        uses: actions/upload-artifact@v4
        with:
          name: Basis-Client-Symbols
          path: |
            "**/StandaloneWindows64_BackUpThisFolder_ButDontShipItWithYourGame"

  build-server:
    name: Build server on Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
    steps:
      - name: "Checkout repository"
        timeout-minutes: 2
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Setup dotnet"
        timeout-minutes: 2
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: "Build server"
        timeout-minutes: 2
        run: |
          "dotnet publish 'Basis Server' -f net9.0 --self-contained --os linux -o build -c Release"
      - name: "Upload server artifact"
        timeout-minutes: 2
        uses: actions/upload-artifact@v4
        with:
          name: Basis-Server
          path: "build"

  create-release:
    name: Create release
    needs: [build-client-win32, build-server]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: "github.ref_type == 'tag' && github.ref != 'refs/tags/latest'"
    steps:
      - name: "Download client artifact"
        timeout-minutes: 10
        uses: "actions/download-artifact@v4"
        with:
          name: Basis-Client
          path: $GITHUB_WORKSPACE/Basis-Client
      - name: "Download server artifact"
        timeout-minutes: 5
        uses: "actions/download-artifact@v4"
        with:
          name: Basis-Server
          path: $GITHUB_WORKSPACE/Basis-Server
      - name: "Install additional dependencies"
        timeout-minutes: 10
        run: "apt-get -y update && apt-get -y install p7zip-full"
      - name: "Archive client artifact"
        timeout-minutes: 10
        run: "7z a -tzip ${{ github.event.repository.name }}-Client.zip Basis-Client"
      - name: "Archive server artifact"
        timeout-minutes: 10
        run: "7z a -tzip ${{ github.event.repository.name }}-Server.zip Basis-Server"
      - name: "Create release"
        if: "github.ref_type == 'tag' && github.ref != 'refs/tags/latest'"
        timeout-minutes: 5
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: "${{ contains(github.ref, '-rc') }}"
          files: |
            ${{ github.event.repository.name }}-Client.zip
            ${{ github.event.repository.name }}-Server.zip

