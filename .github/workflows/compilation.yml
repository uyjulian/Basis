name: Automatic build

on: [push, pull_request]

jobs:
  check-secret:
    runs-on: ubuntu-latest
    outputs:
      secret-is-set: ${{ steps.secret-is-set.outputs.defined }}
    steps:
      - id: secret-is-set
        env:
          TMP_SECRET1: ${{ secrets.UNITY_LICENSE }}
          TMP_SECRET2: ${{ secrets.UNITY_EMAIL }}
          TMP_SECRET3: ${{ secrets.UNITY_PASSWORD }}
        if: "${{ env.TMP_SECRET1 != '' && env.TMP_SECRET2 != '' && env.TMP_SECRET3 != '' }}"
        run: echo "defined=true" >> $GITHUB_OUTPUT

  build-client-win32:
    name: Build client on Windows
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - Basis
    needs: [check-secret]
    if: needs.check-secret.outputs.secret-is-set == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-StandaloneWindows64-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-StandaloneWindows64-
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: 6000.0.31f1
          targetPlatform: StandaloneWindows64
      - uses: actions/upload-artifact@v4
        with:
          name: Basis-Client
          path: |
            build
            "!**/StandaloneWindows64_BackUpThisFolder_ButDontShipItWithYourGame"

  build-server:
    name: Build server on Ubuntu
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - run: "dotnet publish 'Basis Server' -o build -c Release"
      - uses: actions/upload-artifact@v4
        with:
          name: Build-Server
          path: "build"

